#summary Integration of Python and PyQt into 3d Studio Max

== Prerequisites ==

 * You will need *[BlurCore]*
 * You will need *Python*
 * You will need *Autodesk | 3dsMax* ([http://www.autodesk.com/3dsmax])


== Warning: Max 2010 ==

3dsMax 2010 now comes with the Qt DLLs installed with it - this causes a clash with the code that we have released to allow the PyQt bindings.  Right now, this is still beta, and we're simply renaming the DLLs shipped with the application so it will load our libraries instead.  

So far, we have not had any problems with this solution, but if you download our software and use it, *please* let us know if you run into any problems.

Again, if you're installing for 3dsMax 2010 - you'll need to rename the Qt libraries (anything starting with Qt in your max install directory to a *.bak* instead of a *.dll*)

== What is it? ==

Here at Blur we've developed a way to integrate the Python ([http://www.python.org]) programming language into the 3d Studio Max application.  By mapping the basic MAXScript value class to the basic Python PyObject class, we're able to expose MAXScript functionality as a Python module.  All maxscript methods are available using the mxs module and run the same way as they would normally in maxscript, only using a pythonic syntax.

For faster development, we've also integrated the PyQt framework to allow development of Qt applications instead of MAXScript rollouts.

== What versions does it support? ==

Currently, we are supporting:

  * Python24 (x32)
  * Python26 (x64)
  * Autodesk|3dsMax (x32 & x64)
     * max9
     * max2008 (as max10)
     * max2009
     * max2010

== How do I get it? ==

 # Download and install [BlurCore]
 # Download and install Py3dsMax from [http://code.google.com/p/blur-dev/downloads/list]
 # Startup 3dsMax
 # You should see a Python menu next to the MAXScript menu at the top of your application
 # From here, you can create New, Open, or Run python scripts, as well as launch a Python Logger (similar to the MAXscript Listener window)
 # Start developing Python scripts!

== How Does it Work? ==

Once you've gotten everything all setup - start workging through the [Py3dsMaxTuts tutorials]

== Source Code ==

We have finally cleaned up the source code and have provided it on our downloads page.

The MSVC++ Project Files are broken out into the version you will need to compile:
 
 * blurPython_msvc2005.sln     - MSVC 2005 (for max9 & max10)
 * blurPython_msvc2005_sp1.sln - MSVC 2005 Service Pack 1 (for max2009)
 * blurPython_msvc2008         - MSVC 2008 (for max2010+)

All of the solutions load and work with the same source files:

 * blurPython.cpp      - 3dsMax plugin initialization
 * blurPython.def      - 3dsMax plugin definition
 * imports.h           - common Python & 3dsMax header includes that will be needed
 * macros.h            - reusable macros to protect maxscript memory
 * protector.h         - Protector Value class to perform garbage collection on Values wrapped in Python usage
 * wrapper.h           - ObjectWrapper and ValueWrapper classes - mapping the base Value* and PyObject* classes together
 * python_struct.h     - Defines the python maxscript struct
 * sudiomax_module.h   - Defines the Py3dsMax python module

Theoretically, all you would need to compile is to alter the project paths to point to where your 3dsMax include's and libs are located, and where your Python include's and libs are located.

This is done by right clicking on the properties of your solution, and editing:

* C/C++ >> General >> Additional Include Directories
* Linker >> General >> Additional Library Directories

To download, just go to the downloads page, and choose the blurPython Type-Source download.