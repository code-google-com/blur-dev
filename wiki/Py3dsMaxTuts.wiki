#summary Python and 3dsMax Tutorials

== Introduction ==

If you've found your way to this page, then you are ready to see what the power of python can bring to 3dsMax.  Its time to say good-bye to the maxscript coding standards of old and adopt the new power of python.

These tutorials will outline the differences between MAXScript and Python, and how to access the information you need out of maxscript, but in the pythonic way.  It'll comprise of a MAXScript sample, followed by the Python equivalent.

== Basics ==

These tutorials are designed to give you a quick start into the conversion of MAXScript to Python, they are not intended to replace all the documentation of MAXScript and Python.

All your standard variable types that exist in MAXScript also exist in Python - these are the variable types and their corresponding class type.

*Maxscript Variables*
{{{
a = 1        /* integer */
b = 1.0      /* float */
c = "test"   /* string */
}}}

*Python Variables*
{{{
a = 1        # int
b = 1.0      # float
c = "test"   # str
d = 'test'   # unicode - pretty much equivalent to str
}}}

All the containers from MAXScript are available in Python (including some extra ones)

*Maxscript Containers*
{{{
/* Arrays */
a = #( 1, 2, 3, 8, 20 )
print a[1]          /* result: 1  - MAXScript has 1 based arrays */
print a[a.count]    /* result: 20 - MAXScript can access the last index of their arrays */
print a.count       /* result: 5 */

append a 15         /* adds item to the end of the array
insertItem a 1 15   /* inserts 15 at the very beginning of the array */
deleteItem a 1      /* deletes the item at the index 1 of the array */

/* Creating an array as a collection */
a = for obj in objects where isKindOf obj Editable_Mesh collect obj
}}}

*Python Containers*
{{{
# Lists - Python's Array
a = [ 1, 2, 3, 8, 20 ]

