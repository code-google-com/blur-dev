#summary Difference between Structs and Classes

= Structs & Classes =

In Maxscript you have the ability to create structs of data.  In Python, classes can do everything you can in a Maxscript struct - and oh so much more.

*Maxscript Struct*
{{{
/* create a struct */
struct MyStruct (
  _myArray   = #( "a", "b", "c" ),

  function addItem item = (
      append _myArray item
  ),
  function printItems = (
      print _myArray
  )
)

/* Create class instance */
instA = MyStruct()
instA.addItem( "d" )
instA.printItems()    /* result: #( "a", "b", "c", "d" ) */

/* Create class instance */
instB = MyStruct()
instB.addItem( "e" )
instB.printItems()    /* result: #( "a", "b", "c", "e" ) */
}}}

*Python Class*
{{{
# Create a class
class MyClass:
  _myArray  = [ 'a', 'b', 'c' ]

  def addItem( self, item ):
     self._myArray.append( item )
 
  def printItems( self ):
     print self._myArray

# Create class instance
instA = MyClass()
instA.addItem( 'd' )
instA.printItems()      # result: [ 'a', 'b', 'c', 'd' ]

# Create class instance
instB = MyClass()
instB.addItem( 'e' )
instB.printItems()      # result: [ 'a', b', 'c', 'd', 'e' ]
}}}

So, you can see that once again, there is some similarity, and yet, some big differences as well.

==== What is the 'self' variable?  Why don't I pass that into my function? ====

The 'self' variable is actually the instance of the class being passed into the function.  So when you call instA.printItems(), the method is actually getting instA as your first variable.  This way you can easily reference any individual instance of your class, as well as pass it along to other functions.  Something that was never available in Maxscript.

Whenever you're writing methods for a class, you always *must* declare self as the first variable being passed into your class.

=== Object-Oriented Programming ===

Python is an Object-Oriented programming language, which means you can quickly and easily manage inheritance in your objects, something that Maxscript always lacked.


=== Next Topic ===

[Py3dsMaxTutValues Accessing 3dsMax Values]